hello

<script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>


<video id="video0" autoplay="">hi</video>
<script>
  var apiKey = 45226912;
  var sessionId = "1_MX40NTIyNjkxMn5-MTQzMDc1OTUxMzcyMH5rZytEU2lKRlFvcytKOU9KL2Vhb3hGRW9-fg";
  var token = "T1==cGFydG5lcl9pZD00NTIyNjkxMiZzaWc9ZjAyZjVlN2ExZGY1MTUwODI4ZDNjZTNmOWRkYWI3MmVjODllMmU5NTpyb2xlPXB1Ymxpc2hlciZzZXNzaW9uX2lkPTFfTVg0ME5USXlOamt4TW41LU1UUXpNRGMxT1RVeE16Y3lNSDVyWnl0RVUybEtSbEZ2Y3l0S09VOUtMMlZoYjNoR1JXOS1mZyZjcmVhdGVfdGltZT0xNDMwNzU5NTIwJm5vbmNlPTAuNzEyNzcyNzYyODUyMzQyNSZleHBpcmVfdGltZT0xNDMzMzUxNDk2JmNvbm5lY3Rpb25fZGF0YT0=";
  var sourcesLog = document.getElementById('sources-log'),
    sourceIds = [];
  var isViewer = !!queryString('viewer');
  if (isViewer) {
    document.body.classList.add('viewer');
  } else {
    document.title = 'Camera ' + (parseInt(queryString('camIndex'), 10) + 1);
  }

  var fullscreenEl = document.getElementById('fullscreen')
  fullscreenEl.addEventListener('click', goFullScreen);

  function init() {
    setHeight();

    if (typeof MediaStreamTrack === 'undefined' ||
        typeof MediaStreamTrack.getSources === 'undefined') {
      alert('This browser does not support MediaStreamTrack.\n\nTry Chrome.');
      return;
    } else {
      MediaStreamTrack.getSources(gotSources);
    }

    var session = OT.initSession(apiKey, sessionId);

    session.on("streamCreated", function(event) {
      session.subscribe(event.stream);
    });

    session.connect(token, function(error) {
      var cameraIndex = queryString('camIndex');
      var pubOptions = {
          videoSource: sourceIds[cameraIndex],
          resolution: '1280x720'
      };
      console.log("Publishing camera", cameraIndex, pubOptions);
      var publisher = OT.initPublisher(null, pubOptions, function(error) {
        console.log("OT.initPublisher error: ", error);
      });
      session.publish(publisher);
    });

    window.addEventListener('resize', setHeight);
  }

  function goFullScreen(e) {
    fullscreenEl.classList.add('hidden');
    var elem = document.documentElement;
    if (elem.requestFullscreen) {
      elem.requestFullscreen();
    } else if (elem.msRequestFullscreen) {
      elem.msRequestFullscreen();
    } else if (elem.mozRequestFullScreen) {
      elem.mozRequestFullScreen();
    } else if (elem.webkitRequestFullscreen) {
      elem.webkitRequestFullscreen();
    }
  }

  // Returns an array of the two identical webcam ids
  function getIdenticalVideoSourceIds(videoSources) {
    for(entry in videoSources) {
      if (entry.length == 2) {
        return entry;
      }
    }

    // Could not find two identical cameras. Default to returning whatever's there.
    var defaultReturn = [];
    for(entry in videoSources) {
      defaultReturn.push(videoSources[entry].id);
    }
    console.log("No two identical cameras were found. Returning default", defaultReturn);
    return defaultReturn;
  }

  function gotSources(sourceInfos) {
    var videoSources = sourceInfos.filter(function(source) {
      return source.kind == 'video';
    });
    sourcesLog.value = JSON.stringify(videoSources);
    console.log("videoSources", videoSources);
    sourceIds = getIdenticalVideoSourceIds(videoSources);
  }

  function queryString(key) {
      var url = window.location.href;
      keysValues = url.split(/[\?&]+/);
      for (i = 0; i < keysValues.length; i++) {
          keyValue = keysValues[i].split("=");
          if (keyValue[0] == key) {
              return keyValue[1];
          }
      }
      return null;
  }
  function setHeight() {
    document.body.style.height = window.innerHeight + 'px';
  }
  setTimeout(function() {
    init();
  }, 2000);
</script>